# Purpose: –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π - –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á, –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—á–∫–æ–≤.
# Context: Child-specific bot functionality, task submission, balance checking.
# Requirements: Task list, submission interface, points display.

from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from app.core import get_logger

logger = get_logger(__name__)
router = Router()


@router.message(Command("child"))
async def child_menu(message: types.Message):
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –¥–µ—Ç–µ–π.
    """
    user = message.from_user
    logger.info(f"Child menu requested by user {user.id}")
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìã –ú–æ–∏ –∑–∞–¥–∞–Ω–∏—è",
                    callback_data="child_tasks"
                )
            ],
            [
                InlineKeyboardButton(
                    text="ü™ô –ë–∞–ª–∞–Ω—Å",
                    callback_data="child_balance"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üõí –ú–∞–≥–∞–∑–∏–Ω",
                    callback_data="child_shop"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üéí –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏",
                    callback_data="child_inventory"
                )
            ]
        ]
    )
    
    menu_text = (
        "üë∂ <b>–ú–µ–Ω—é —Ä–µ–±—ë–Ω–∫–∞</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    
    await message.answer(text=menu_text, reply_markup=keyboard)


@router.callback_query(F.data == "child_shop")
async def show_shop(callback_query: types.CallbackQuery):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω —Ç–æ–≤–∞—Ä–æ–≤.
    
    TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤.
    –ü–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É.
    """
    await callback_query.answer()
    
    shop_text = (
        "üõí <b>–ú–∞–≥–∞–∑–∏–Ω –Ω–∞–≥—Ä–∞–¥</b>\n\n"
        "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ –º–æ–Ω–µ—Ç—ã!\n\n"
        "–¢–æ–≤–∞—Ä—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω:"
    )
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üöÄ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω",
                    url="https://t.me/your_bot_name/shop"  # TODO: –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="back_to_child_menu"
                )
            ]
        ]
    )
    
    await callback_query.message.edit_text(
        text=shop_text,
        reply_markup=keyboard
    )


@router.callback_query(F.data == "child_balance")
async def show_balance(callback_query: types.CallbackQuery):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å —Ä–µ–±—ë–Ω–∫–∞.
    
    TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞.
    """
    await callback_query.answer()
    
    balance_text = (
        "ü™ô <b>–¢–≤–æ–π –±–∞–ª–∞–Ω—Å</b>\n\n"
        "–û—á–∫–∏: <code>0</code> ‚≠êÔ∏è\n"
        "–ú–æ–Ω–µ—Ç—ã: <code>0</code> ü™ô\n\n"
        "–í—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª—å—à–µ!"
    )
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="back_to_child_menu"
                )
            ]
        ]
    )
    
    await callback_query.message.edit_text(
        text=balance_text,
        reply_markup=keyboard
    )


@router.callback_query(F.data == "child_inventory")
async def show_inventory(callback_query: types.CallbackQuery):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å —Ä–µ–±—ë–Ω–∫–∞ (–∫—É–ø–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã).
    
    TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫.
    """
    await callback_query.answer()
    
    inventory_text = (
        "üéí <b>–ú–æ–∏ –ø–æ–∫—É–ø–∫–∏</b>\n\n"
        "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–∫—É–ø–æ–∫.\n"
        "–ó–∞—Ä–∞–±–æ—Ç–∞–π –º–æ–Ω–µ—Ç—ã –∏ –∫—É–ø–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ!"
    )
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üõí –ú–∞–≥–∞–∑–∏–Ω",
                    callback_data="child_shop"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="back_to_child_menu"
                )
            ]
        ]
    )
    
    await callback_query.message.edit_text(
        text=inventory_text,
        reply_markup=keyboard
    )


@router.callback_query(F.data == "child_tasks")
async def show_tasks(callback_query: types.CallbackQuery):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è —Ä–µ–±—ë–Ω–∫–∞.
    
    TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API.
    """
    await callback_query.answer()
    
    tasks_text = (
        "üìã <b>–ú–æ–∏ –∑–∞–¥–∞–Ω–∏—è</b>\n\n"
        "–ó–∞–¥–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n"
        "–¢–∞–º —Ç—ã –º–æ–∂–µ—à—å:\n"
        "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è\n"
        "‚Ä¢ –°–¥–∞–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏\n"
        "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"
    )
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="back_to_child_menu"
                )
            ]
        ]
    )
    
    await callback_query.message.edit_text(
        text=tasks_text,
        reply_markup=keyboard
    )


@router.callback_query(F.data == "back_to_child_menu")
async def back_to_child_menu(callback_query: types.CallbackQuery):
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é —Ä–µ–±—ë–Ω–∫–∞."""
    await callback_query.answer()
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìã –ú–æ–∏ –∑–∞–¥–∞–Ω–∏—è",
                    callback_data="child_tasks"
                )
            ],
            [
                InlineKeyboardButton(
                    text="ü™ô –ë–∞–ª–∞–Ω—Å",
                    callback_data="child_balance"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üõí –ú–∞–≥–∞–∑–∏–Ω",
                    callback_data="child_shop"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üéí –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏",
                    callback_data="child_inventory"
                )
            ]
        ]
    )
    
    menu_text = (
        "üë∂ <b>–ú–µ–Ω—é —Ä–µ–±—ë–Ω–∫–∞</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    
    await callback_query.message.edit_text(
        text=menu_text,
        reply_markup=keyboard
    )
