# Purpose: –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π - –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á, –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—á–∫–æ–≤.
# Context: Child-specific bot functionality, task submission, balance checking.
# Requirements: Task list, submission interface, points display.

from aiogram import Router, types
from aiogram.filters import Command

from app.core import get_logger

logger = get_logger(__name__)
router = Router()


@router.message(Command("child"))
async def child_menu(message: types.Message):
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –¥–µ—Ç–µ–π.
    
    TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ—É—Ç–æ–≤ API.
    """
    user = message.from_user
    logger.info(f"Child menu requested by user {user.id}")
    
    menu_text = (
        "üë∂ <b>–ú–µ–Ω—é —Ä–µ–±—ë–Ω–∫–∞</b>\n\n"
        "–í –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
        "‚Ä¢ üìã –ú–æ–∏ –∑–∞–¥–∞–Ω–∏—è\n"
        "‚Ä¢ üì§ –°–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á\n"
        "‚Ä¢ ü™ô –ú–æ–π –±–∞–ª–∞–Ω—Å –æ—á–∫–æ–≤ –∏ –º–æ–Ω–µ—Ç\n"
        "‚Ä¢ üõí –ú–∞–≥–∞–∑–∏–Ω –Ω–∞–≥—Ä–∞–¥\n"
        "‚Ä¢ üèÜ –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n\n"
        "–û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π!"
    )
    
    await message.answer(text=menu_text)