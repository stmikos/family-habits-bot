# Purpose: –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π - —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á.
# Context: Parent-specific bot functionality, task management, notifications.
# Requirements: Task creation, approval/rejection, family management.

from aiogram import Router, types
from aiogram.filters import Command

from app.core import get_logger

logger = get_logger(__name__)
router = Router()


@router.message(Command("parent"))
async def parent_menu(message: types.Message):
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π.
    
    TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ—É—Ç–æ–≤ API.
    """
    user = message.from_user
    logger.info(f"Parent menu requested by user {user.id}")
    
    menu_text = (
        "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ <b>–ú–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è</b>\n\n"
        "–í –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
        "‚Ä¢ üìù –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π\n"
        "‚Ä¢ üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á\n"
        "‚Ä¢ ‚úÖ –û–¥–æ–±—Ä–µ–Ω–∏–µ/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ\n"
        "‚Ä¢ üë∂ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç—å–º–∏\n"
        "‚Ä¢ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–º—å–∏\n\n"
        "–û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞!"
    )
    
    await message.answer(text=menu_text)