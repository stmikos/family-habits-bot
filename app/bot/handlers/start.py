# Purpose: –•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start –∏ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
# Context: Initial bot interaction, user registration, role assignment.
# Requirements: Register parent/child, show main menu, handle WebApp launch.

from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

from app.core import get_logger, settings

logger = get_logger(__name__)
router = Router()


@router.message(Command("start"))
async def start_command(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—É—Å–∫–∞ MiniApp.
    """
    user = message.from_user
    logger.info(f"User {user.id} ({user.full_name}) started bot")
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ WebApp
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üöÄ –û—Ç–∫—Ä—ã—Ç—å Family Habit",
                    web_app=WebAppInfo(url=settings.webapp_url)
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ",
                    callback_data="about"
                )
            ]
        ]
    )
    
    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{user.full_name}</b>!\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>Family Habit</b> ‚Äî –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ —Ç—Ä–µ–∫–∏–Ω–≥–∞ –ø—Ä–∏–≤—ã—á–µ–∫.\n\n"
        "üéØ <b>–î–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π:</b> —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å, –Ω–∞–≥—Ä–∞–∂–¥–∞–π—Ç–µ –¥–µ—Ç–µ–π\n"
        "üë∂ <b>–î–ª—è –¥–µ—Ç–µ–π:</b> –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –æ—á–∫–∏, –ø–æ–∫—É–ø–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"
    )
    
    await message.answer(
        text=welcome_text,
        reply_markup=keyboard
    )


@router.callback_query(lambda c: c.data == "about")
async def about_callback(callback_query: types.CallbackQuery):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ."""
    about_text = (
        "üì± <b>Family Habit</b>\n\n"
        "–ü–æ–º–æ–≥–∞–µ–º —Å–µ–º—å—è–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ —á–µ—Ä–µ–∑ –∏–≥—Ä–æ–≤—É—é –º–µ—Ö–∞–Ω–∏–∫—É:\n\n"
        "‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π —Å –¥–µ–¥–ª–∞–π–Ω–∞–º–∏\n"
        "üì∏ –û—Ç—á—ë—Ç—ã —Å —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ\n"
        "üèÜ –°–∏—Å—Ç–µ–º–∞ –æ—á–∫–æ–≤ –∏ –Ω–∞–≥—Ä–∞–¥\n"
        "üõí –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–∞–≥–∞–∑–∏–Ω –ø—Ä–∏–∑–æ–≤\n"
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\n\n"
        "–í–µ—Ä—Å–∏—è: 1.0.0 MVP"
    )
    
    await callback_query.answer()
    await callback_query.message.edit_text(
        text=about_text,
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üîô –ù–∞–∑–∞–¥",
                        callback_data="back_to_main"
                    )
                ]
            ]
        )
    )


@router.callback_query(lambda c: c.data == "back_to_main")
async def back_to_main_callback(callback_query: types.CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é."""
    await callback_query.answer()
    
    # –ü–æ–≤—Ç–æ—Ä—è–µ–º –ª–æ–≥–∏–∫—É start_command
    user = callback_query.from_user
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üöÄ –û—Ç–∫—Ä—ã—Ç—å Family Habit",
                    web_app=WebAppInfo(url=settings.webapp_url)
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ",
                    callback_data="about"
                )
            ]
        ]
    )
    
    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{user.full_name}</b>!\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>Family Habit</b> ‚Äî –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ —Ç—Ä–µ–∫–∏–Ω–≥–∞ –ø—Ä–∏–≤—ã—á–µ–∫.\n\n"
        "üéØ <b>–î–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π:</b> —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å, –Ω–∞–≥—Ä–∞–∂–¥–∞–π—Ç–µ –¥–µ—Ç–µ–π\n"
        "üë∂ <b>–î–ª—è –¥–µ—Ç–µ–π:</b> –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –æ—á–∫–∏, –ø–æ–∫—É–ø–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"
    )
    
    await callback_query.message.edit_text(
        text=welcome_text,
        reply_markup=keyboard
    )